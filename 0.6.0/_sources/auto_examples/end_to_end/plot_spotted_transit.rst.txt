
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/end_to_end/plot_spotted_transit.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_end_to_end_plot_spotted_transit.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_end_to_end_plot_spotted_transit.py:


Observe a transit of a spotted star.
========================================

This example demonstrates stellar contamination of a transit spectrum.

A transit can change the spot coverage of a star and produce a signal
that is difficult to distinguish from atmospheric absorption. We aim to simulate
data from :cite:t:`2023ApJ...948L..11M`.

.. GENERATED FROM PYTHON SOURCE LINES 11-28

.. code-block:: Python

    from pathlib import Path
    import numpy as np
    import matplotlib.pyplot as plt
    from astropy import units as u
    import pypsg

    from VSPEC import ObservationModel,PhaseAnalyzer
    from VSPEC import params
    from VSPEC.config import MSH

    SEED = 10
    PRE_TRANSIT = 8
    IN_TRANSIT = 13
    pypsg.docker.set_url_and_run()







.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Saved settings to /home/ted/.pypsg/settings.json
    Reloading settings...




.. GENERATED FROM PYTHON SOURCE LINES 29-34

Create the needed configurations
--------------------------------

:cite:t:`2023ApJ...948L..11M` observed super-Earth GJ 486b with
JWST NIRSpec/G395H

.. GENERATED FROM PYTHON SOURCE LINES 34-250

.. code-block:: Python


    # Instrument

    inst = params.InstrumentParameters(
        telescope=params.SingleDishParameters.jwst(),
        bandpass=params.BandpassParameters(
            wl_blue=2.87*u.um,
            wl_red=5.14*u.um,
            resolving_power=200,
            wavelength_unit=u.um,
            flux_unit=u.Unit('W m-2 um-1')
        ),
        detector=params.DetectorParameters(
            beam_width=5*u.arcsec,
            integration_time=0.5*u.s,
            ccd=params.ccdParameters(
                pixel_sampling=8,
                read_noise=16.8*u.electron,
                dark_current=0.005*u.electron/u.s,
                throughput=0.3,
                emissivity=0.1,
                temperature=50*u.K
            )
        )
    )

    # Observation

    observation = params.ObservationParameters(
        observation_time=3.53*u.hr,
        integration_time=8*u.min
    )

    # PSG

    psg_kwargs = dict(
        gcm_binning=200,
        phase_binning=1,
        nmax=0,
        lmax=0,
        use_continuum_stellar=True,
        continuum=['Rayleigh', 'Refraction'],
    )
    psg_params = params.psgParameters(
        use_molecular_signatures=True,
        **psg_kwargs
    )
    psg_no_atm = params.psgParameters(
        use_molecular_signatures=False,
        **psg_kwargs
    )

    # Star and Planet

    star_teff = 3343*u.K
    star_rad = 0.339*u.R_sun
    a_rstar = 11.229 # Moran+23 Table 1
    rp_rstar = 0.03709 # Moran+23 Table 1
    planet_rad = star_rad * rp_rstar
    orbit_rad = star_rad * a_rstar
    orbit_period = 1.467119*u.day
    planet_rot_period = orbit_period
    star_rot_period = np.inf*u.s # assume the star does not change.
    planet_mass = 2.82*u.M_earth
    star_mass = 0.323*u.M_sun
    inclination = 89.06*u.deg
    planet_norm_factor = {
        'rock_quiet': 1,
        'rock_spotted': 0.97,
        'water_quiet': 0.98,
    } # We will multiply the radius by these scalars rather than fit
      # later (because I have run this code before and know how much
      # each model is off by).

    print(f'Planet radius: {planet_rad.to_value(u.R_earth)} R_earth')
    print(f'Semimajor axis: {orbit_rad.to_value(u.AU)} AU')

    observation_angle = (2*np.pi*u.rad * observation.observation_time/orbit_period).to(u.deg)
    initial_phase = 180*u.deg - 0.5*observation_angle

    planet_kwargs = dict(
        name='GJ486b',
        gravity=params.GravityParameters('kg',planet_mass),
        semimajor_axis=orbit_rad,
        orbit_period=orbit_period,
        rotation_period=planet_rot_period,
        eccentricity=0,
        obliquity=0*u.deg,
        obliquity_direction=0*u.deg,
        init_phase=initial_phase,
        init_substellar_lon=0*u.deg
    )

    quiet_rock_planet = params.PlanetParameters(
        radius=planet_rad*planet_norm_factor['rock_quiet'],
        **planet_kwargs
    )
    quiet_water_planet = params.PlanetParameters(
        radius=planet_rad*planet_norm_factor['water_quiet'],
        **planet_kwargs
    )
    spotted_rock_planet = params.PlanetParameters(
        radius=planet_rad*planet_norm_factor['rock_spotted'],
        **planet_kwargs
    )


    system_params = params.SystemParameters(
        distance=8.07*u.pc,
        inclination=inclination,
        phase_of_periasteron=0*u.deg
    )


    star_dict = {
        'teff': star_teff,
        'radius': star_rad
    }
    planet_dict = {'semimajor_axis': orbit_rad}

    gcm_dict = {
        'nlayer': 40,
        'nlon': 60,
        'nlat': 30,
        'epsilon': 100,
        'albedo': 0.3,
        'emissivity': 1.0,
        'lat_redistribution': 0.0,
        'gamma': 1.0,
        'psurf': 1*u.bar,
        'ptop': 1e-10*u.bar,
        'wind': {'U': '0 m/s','V':'0 m/s'},
        'molecules':{'H2O':0.99}
    }

    # Create two sets of GCM Parameters

    h2o_atm = {'molecules':{'H2O':0.99}}
    gcm_h2o = params.gcmParameters.from_dict({
        'star':star_dict,
        'planet':planet_dict,
        'gcm':{'vspec':dict(gcm_dict,**h2o_atm),'mean_molec_weight':18}
    })
    star_kwargs = dict(
        psg_star_template='M',
        teff=star_teff,
        mass=star_mass,
        radius=star_rad,
        period=star_rot_period,
        misalignment=0*u.deg,
        misalignment_dir=0*u.deg,
        ld=params.LimbDarkeningParameters.lambertian(),
        faculae=params.FaculaParameters.none(),
        flares=params.FlareParameters.none(),
        granulation=params.GranulationParameters.none(),
        grid_params=100000,
        spectral_grid='default'
    )
    quiet_star = params.StarParameters(
        spots=params.SpotParameters.none(),
        **star_kwargs
    )
    spotted_star = params.StarParameters(
        spots=params.SpotParameters(
            distribution='iso',
            initial_coverage=0.11,
            area_mean=500*MSH,
            area_logsigma=0.2,
            teff_umbra=2700*u.K,
            teff_penumbra=2700*u.K,
            equillibrium_coverage=0.0,
            burn_in=0*u.s,
            growth_rate=0.0/u.day,
            decay_rate=0*MSH/u.day,
            initial_area=10*MSH
        ),
        **star_kwargs
    )

    # Set parameters for simulation
    header_kwargs = dict(
        teff_min=2300*u.K,teff_max=3400*u.K,
        seed = SEED
    )
    internal_params_kwargs = dict(
        system=system_params,
        obs=observation,
        gcm=gcm_h2o,
        inst=inst
    )

    # Make the three cases

    params_rock_quiet = params.InternalParameters(
        header=params.Header(data_path=Path('.vspec/rock_quiet'),**header_kwargs),
        star = quiet_star,
        psg=psg_no_atm,
        planet=quiet_rock_planet,
        **internal_params_kwargs
    )
    params_h2o_quiet = params.InternalParameters(
        header=params.Header(data_path=Path('.vspec/h2o_quiet'),**header_kwargs),
        star = quiet_star,
        psg=psg_params,
        planet=quiet_water_planet,
        **internal_params_kwargs
    )

    params_rock_spotted = params.InternalParameters(
        header=params.Header(data_path=Path('.vspec/rock_spotted'),**header_kwargs),
        star = spotted_star,
        psg=psg_no_atm,
        planet=spotted_rock_planet,
        **internal_params_kwargs
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Planet radius: 1.371472837835719 R_earth
    Semimajor axis: 0.017702612840063636 AU




.. GENERATED FROM PYTHON SOURCE LINES 251-255

Run VSPEC for the simplest case
-------------------------------

We read in the config file and run the model.

.. GENERATED FROM PYTHON SOURCE LINES 255-260

.. code-block:: Python


    model_rock_quiet = ObservationModel(params_rock_quiet)
    model_rock_quiet.build_planet()
    model_rock_quiet.build_spectra()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Starting at phase 161.9544290544939 deg, observe for 3.53 h in 26 steps
    Phases = [161.95 163.32 164.68 166.04 167.41 168.77 170.13 171.5  172.86 174.22
     175.59 176.95 178.31 179.68 181.04 182.4  183.77 185.13 186.49 187.86
     189.22 190.58 191.95 193.31 194.67 196.03 197.4 ] deg
    Build Planet:   0%|          | 0/26 [00:00<?, ?it/s]    Build Planet:   4%|▍         | 1/26 [00:00<00:02,  9.46it/s]    Build Planet:   8%|▊         | 2/26 [00:00<00:02,  9.43it/s]    Build Planet:  15%|█▌        | 4/26 [00:00<00:02,  9.46it/s]    Build Planet:  19%|█▉        | 5/26 [00:00<00:02,  9.45it/s]    Build Planet:  23%|██▎       | 6/26 [00:00<00:02,  9.19it/s]    Build Planet:  31%|███       | 8/26 [00:00<00:01,  9.45it/s]    Build Planet:  35%|███▍      | 9/26 [00:00<00:01,  9.19it/s]    Build Planet:  38%|███▊      | 10/26 [00:01<00:01,  8.97it/s]    Build Planet:  42%|████▏     | 11/26 [00:01<00:01,  9.08it/s]    Build Planet:  46%|████▌     | 12/26 [00:01<00:01,  8.68it/s]    Build Planet:  50%|█████     | 13/26 [00:01<00:01,  8.68it/s]    Build Planet:  54%|█████▍    | 14/26 [00:01<00:01,  8.56it/s]    Build Planet:  58%|█████▊    | 15/26 [00:01<00:01,  8.60it/s]    Build Planet:  62%|██████▏   | 16/26 [00:01<00:01,  8.86it/s]    Build Planet:  65%|██████▌   | 17/26 [00:01<00:01,  8.86it/s]    Build Planet:  69%|██████▉   | 18/26 [00:01<00:00,  8.96it/s]    Build Planet:  73%|███████▎  | 19/26 [00:02<00:00,  9.08it/s]    Build Planet:  77%|███████▋  | 20/26 [00:02<00:00,  9.18it/s]    Build Planet:  81%|████████  | 21/26 [00:02<00:00,  9.00it/s]    Build Planet:  88%|████████▊ | 23/26 [00:02<00:00,  8.94it/s]    Build Planet:  92%|█████████▏| 24/26 [00:02<00:00,  8.76it/s]    Build Planet:  96%|█████████▌| 25/26 [00:02<00:00,  8.85it/s]    Build Planet: 100%|██████████| 26/26 [00:02<00:00,  8.57it/s]    Build Planet: 27it [00:03,  8.76it/s]                            Build Planet: 27it [00:03,  8.95it/s]
    Build Spectra:   0%|          | 0/26 [00:00<?, ?it/s]
    Loading Spectra:   0%|          | 0/12 [00:00<?, ?it/s]
    Loading Spectra:   8%|▊         | 1/12 [00:00<00:03,  3.43it/s]
    Loading Spectra:  17%|█▋        | 2/12 [00:00<00:02,  3.44it/s]
    Loading Spectra:  25%|██▌       | 3/12 [00:00<00:02,  3.44it/s]
    Loading Spectra:  33%|███▎      | 4/12 [00:01<00:02,  3.44it/s]
    Loading Spectra:  42%|████▏     | 5/12 [00:01<00:02,  3.44it/s]
    Loading Spectra:  50%|█████     | 6/12 [00:01<00:01,  3.45it/s]
    Loading Spectra:  58%|█████▊    | 7/12 [00:02<00:01,  3.45it/s]
    Loading Spectra:  67%|██████▋   | 8/12 [00:02<00:01,  3.45it/s]
    Loading Spectra:  75%|███████▌  | 9/12 [00:02<00:00,  3.46it/s]
    Loading Spectra:  83%|████████▎ | 10/12 [00:02<00:00,  3.46it/s]
    Loading Spectra:  92%|█████████▏| 11/12 [00:03<00:00,  3.46it/s]
    Loading Spectra: 100%|██████████| 12/12 [00:03<00:00,  3.46it/s]    Loading Spectra: 100%|██████████| 12/12 [00:03<00:00,  3.45it/s]
    Build Spectra:   4%|▍         | 1/26 [00:03<01:31,  3.65s/it]    Build Spectra:   8%|▊         | 2/26 [00:03<00:38,  1.60s/it]    Build Spectra:  12%|█▏        | 3/26 [00:03<00:21,  1.06it/s]    Build Spectra:  15%|█▌        | 4/26 [00:04<00:14,  1.56it/s]    Build Spectra:  19%|█▉        | 5/26 [00:04<00:09,  2.13it/s]    Build Spectra:  23%|██▎       | 6/26 [00:04<00:07,  2.72it/s]    Build Spectra:  27%|██▋       | 7/26 [00:04<00:05,  3.30it/s]    Build Spectra:  31%|███       | 8/26 [00:04<00:04,  3.84it/s]    Build Spectra:  35%|███▍      | 9/26 [00:04<00:03,  4.32it/s]    Build Spectra:  38%|███▊      | 10/26 [00:05<00:03,  4.71it/s]    Build Spectra:  42%|████▏     | 11/26 [00:05<00:03,  4.54it/s]    Build Spectra:  46%|████▌     | 12/26 [00:05<00:03,  4.43it/s]    Build Spectra:  50%|█████     | 13/26 [00:05<00:02,  4.36it/s]    Build Spectra:  54%|█████▍    | 14/26 [00:06<00:02,  4.31it/s]    Build Spectra:  58%|█████▊    | 15/26 [00:06<00:02,  4.27it/s]    Build Spectra:  62%|██████▏   | 16/26 [00:06<00:02,  4.24it/s]    Build Spectra:  65%|██████▌   | 17/26 [00:06<00:02,  4.23it/s]    Build Spectra:  69%|██████▉   | 18/26 [00:07<00:01,  4.28it/s]    Build Spectra:  73%|███████▎  | 19/26 [00:07<00:01,  4.65it/s]    Build Spectra:  77%|███████▋  | 20/26 [00:07<00:01,  4.94it/s]    Build Spectra:  81%|████████  | 21/26 [00:07<00:00,  5.20it/s]    Build Spectra:  85%|████████▍ | 22/26 [00:07<00:00,  5.38it/s]    Build Spectra:  88%|████████▊ | 23/26 [00:07<00:00,  5.52it/s]    Build Spectra:  92%|█████████▏| 24/26 [00:08<00:00,  5.63it/s]    Build Spectra:  96%|█████████▌| 25/26 [00:08<00:00,  5.69it/s]    Build Spectra: 100%|██████████| 26/26 [00:08<00:00,  5.75it/s]    Build Spectra: 100%|██████████| 26/26 [00:08<00:00,  3.08it/s]




.. GENERATED FROM PYTHON SOURCE LINES 261-266

Load in the data
----------------

We can use VSPEC to read in the synthetic
data we just created.

.. GENERATED FROM PYTHON SOURCE LINES 266-269

.. code-block:: Python


    data_rock_quiet = PhaseAnalyzer(model_rock_quiet.directories['all_model'])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/ted/github/VSPEC/VSPEC/analysis.py:115: RuntimeWarning: No Layer info, maybe globes or molecular signatures are off
      warnings.warn(




.. GENERATED FROM PYTHON SOURCE LINES 270-274

Plot the transit
----------------

Lets plot the lightcurve of each channel.

.. GENERATED FROM PYTHON SOURCE LINES 274-310

.. code-block:: Python


    def plot_transit(data:PhaseAnalyzer,title:str,color:str):
        time_from_mid_transit = (data.time-0.5*(data.time[-1]+data.time[0])).to(u.hour)

        fig,axes = plt.subplots(2,1,tight_layout=True)
        axes[0].scatter(
            time_from_mid_transit,
            data.lightcurve('total',(0,-1),normalize=0,noise=False),
            label = 'white light curve',c=color
        )
        axes[0].set_xlabel('Time past mid-transit (hour)')
        axes[0].set_ylabel('Transit depth (ppm)')
        axes[0].legend()
        axes[0].set_title(title)

        # standardize the epochs to use for analysis
        pre_transit = PRE_TRANSIT
        in_transit = IN_TRANSIT

        unocculted_spectrum = data.spectrum('total',pre_transit)
        occulted_spectrum = data.spectrum('total',in_transit)
        lost_to_transit = unocculted_spectrum-occulted_spectrum
        transit_depth = (lost_to_transit/unocculted_spectrum).to_value(u.dimensionless_unscaled)

        axes[1].plot(data.wavelength, 1e6*(transit_depth),c=color)
        axes[1].set_xlabel(f'Wavelength ({data.wavelength.unit})')
        axes[1].set_ylabel('Transit depth (ppm)')
        ylo,yhi = axes[1].get_ylim()
        if yhi-ylo < 0.5:
            mean = 0.5*(ylo+yhi)
            axes[1].set_ylim(mean-0.25,mean+0.25)

        return fig

    plot_transit(data_rock_quiet,'Spotless Star and Bare Rock','xkcd:lavender').show()




.. image-sg:: /auto_examples/end_to_end/images/sphx_glr_plot_spotted_transit_001.png
   :alt: Spotless Star and Bare Rock
   :srcset: /auto_examples/end_to_end/images/sphx_glr_plot_spotted_transit_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 311-318

Run the other models
--------------------

Let's do the same analysis for the other cases.

Spotless Star, H2O Planet
+++++++++++++++++++++++++

.. GENERATED FROM PYTHON SOURCE LINES 318-327

.. code-block:: Python


    model_h2o_quiet = ObservationModel(params_h2o_quiet)
    model_h2o_quiet.build_planet()
    model_h2o_quiet.build_spectra()

    data_h2o_quiet = PhaseAnalyzer(model_h2o_quiet.directories['all_model'])

    plot_transit(data_h2o_quiet,'Spotless Star and 1 bar H2O Atmosphere','xkcd:azure').show()




.. image-sg:: /auto_examples/end_to_end/images/sphx_glr_plot_spotted_transit_002.png
   :alt: Spotless Star and 1 bar H2O Atmosphere
   :srcset: /auto_examples/end_to_end/images/sphx_glr_plot_spotted_transit_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Starting at phase 161.9544290544939 deg, observe for 3.53 h in 26 steps
    Phases = [161.95 163.32 164.68 166.04 167.41 168.77 170.13 171.5  172.86 174.22
     175.59 176.95 178.31 179.68 181.04 182.4  183.77 185.13 186.49 187.86
     189.22 190.58 191.95 193.31 194.67 196.03 197.4 ] deg
    Build Planet:   0%|          | 0/26 [00:00<?, ?it/s]    Build Planet:   4%|▍         | 1/26 [00:00<00:04,  5.11it/s]    Build Planet:   8%|▊         | 2/26 [00:00<00:04,  5.90it/s]    Build Planet:  12%|█▏        | 3/26 [00:00<00:03,  5.97it/s]    Build Planet:  15%|█▌        | 4/26 [00:00<00:03,  6.07it/s]    Build Planet:  19%|█▉        | 5/26 [00:00<00:03,  6.29it/s]    Build Planet:  23%|██▎       | 6/26 [00:00<00:03,  6.37it/s]    Build Planet:  27%|██▋       | 7/26 [00:01<00:02,  6.42it/s]    Build Planet:  31%|███       | 8/26 [00:01<00:02,  6.40it/s]    Build Planet:  35%|███▍      | 9/26 [00:01<00:02,  6.15it/s]    Build Planet:  38%|███▊      | 10/26 [00:01<00:02,  6.03it/s]    Build Planet:  42%|████▏     | 11/26 [00:01<00:02,  5.60it/s]    Build Planet:  46%|████▌     | 12/26 [00:02<00:02,  5.20it/s]    Build Planet:  50%|█████     | 13/26 [00:02<00:02,  5.12it/s]    Build Planet:  54%|█████▍    | 14/26 [00:02<00:02,  5.03it/s]    Build Planet:  58%|█████▊    | 15/26 [00:02<00:02,  5.01it/s]    Build Planet:  62%|██████▏   | 16/26 [00:02<00:02,  4.91it/s]    Build Planet:  65%|██████▌   | 17/26 [00:03<00:01,  4.72it/s]    Build Planet:  69%|██████▉   | 18/26 [00:03<00:01,  4.87it/s]    Build Planet:  73%|███████▎  | 19/26 [00:03<00:01,  5.19it/s]    Build Planet:  77%|███████▋  | 20/26 [00:03<00:01,  5.47it/s]    Build Planet:  81%|████████  | 21/26 [00:03<00:00,  5.63it/s]    Build Planet:  85%|████████▍ | 22/26 [00:03<00:00,  5.73it/s]    Build Planet:  88%|████████▊ | 23/26 [00:04<00:00,  5.94it/s]    Build Planet:  92%|█████████▏| 24/26 [00:04<00:00,  5.96it/s]    Build Planet:  96%|█████████▌| 25/26 [00:04<00:00,  5.98it/s]    Build Planet: 100%|██████████| 26/26 [00:04<00:00,  6.15it/s]    Build Planet: 27it [00:04,  6.22it/s]                            Build Planet: 27it [00:04,  5.67it/s]
    Build Spectra:   0%|          | 0/26 [00:00<?, ?it/s]
    Loading Spectra:   0%|          | 0/12 [00:00<?, ?it/s]
    Loading Spectra:   8%|▊         | 1/12 [00:00<00:03,  3.45it/s]
    Loading Spectra:  17%|█▋        | 2/12 [00:00<00:02,  3.45it/s]
    Loading Spectra:  25%|██▌       | 3/12 [00:00<00:02,  3.45it/s]
    Loading Spectra:  33%|███▎      | 4/12 [00:01<00:02,  3.45it/s]
    Loading Spectra:  42%|████▏     | 5/12 [00:01<00:02,  3.45it/s]
    Loading Spectra:  50%|█████     | 6/12 [00:01<00:01,  3.46it/s]
    Loading Spectra:  58%|█████▊    | 7/12 [00:02<00:01,  3.46it/s]
    Loading Spectra:  67%|██████▋   | 8/12 [00:02<00:01,  3.46it/s]
    Loading Spectra:  75%|███████▌  | 9/12 [00:02<00:00,  3.46it/s]
    Loading Spectra:  83%|████████▎ | 10/12 [00:02<00:00,  3.47it/s]
    Loading Spectra:  92%|█████████▏| 11/12 [00:03<00:00,  3.47it/s]
    Loading Spectra: 100%|██████████| 12/12 [00:03<00:00,  3.47it/s]    Loading Spectra: 100%|██████████| 12/12 [00:03<00:00,  3.46it/s]
    Build Spectra:   4%|▍         | 1/26 [00:03<01:31,  3.66s/it]    Build Spectra:   8%|▊         | 2/26 [00:03<00:38,  1.62s/it]    Build Spectra:  12%|█▏        | 3/26 [00:04<00:22,  1.03it/s]    Build Spectra:  15%|█▌        | 4/26 [00:04<00:14,  1.51it/s]    Build Spectra:  19%|█▉        | 5/26 [00:04<00:10,  2.03it/s]    Build Spectra:  23%|██▎       | 6/26 [00:04<00:07,  2.56it/s]    Build Spectra:  27%|██▋       | 7/26 [00:04<00:06,  3.07it/s]    Build Spectra:  31%|███       | 8/26 [00:05<00:05,  3.53it/s]    Build Spectra:  35%|███▍      | 9/26 [00:05<00:04,  3.93it/s]    Build Spectra:  38%|███▊      | 10/26 [00:05<00:03,  4.25it/s]    Build Spectra:  42%|████▏     | 11/26 [00:05<00:03,  4.10it/s]    Build Spectra:  46%|████▌     | 12/26 [00:05<00:03,  4.01it/s]    Build Spectra:  50%|█████     | 13/26 [00:06<00:03,  3.94it/s]    Build Spectra:  54%|█████▍    | 14/26 [00:06<00:03,  3.90it/s]    Build Spectra:  58%|█████▊    | 15/26 [00:06<00:02,  3.87it/s]    Build Spectra:  62%|██████▏   | 16/26 [00:06<00:02,  3.86it/s]    Build Spectra:  65%|██████▌   | 17/26 [00:07<00:02,  3.84it/s]    Build Spectra:  69%|██████▉   | 18/26 [00:07<00:02,  3.89it/s]    Build Spectra:  73%|███████▎  | 19/26 [00:07<00:01,  4.22it/s]    Build Spectra:  77%|███████▋  | 20/26 [00:07<00:01,  4.47it/s]    Build Spectra:  81%|████████  | 21/26 [00:08<00:01,  4.67it/s]    Build Spectra:  85%|████████▍ | 22/26 [00:08<00:00,  4.82it/s]    Build Spectra:  88%|████████▊ | 23/26 [00:08<00:00,  4.92it/s]    Build Spectra:  92%|█████████▏| 24/26 [00:08<00:00,  5.01it/s]    Build Spectra:  96%|█████████▌| 25/26 [00:08<00:00,  5.07it/s]    Build Spectra: 100%|██████████| 26/26 [00:09<00:00,  5.11it/s]    Build Spectra: 100%|██████████| 26/26 [00:09<00:00,  2.88it/s]




.. GENERATED FROM PYTHON SOURCE LINES 328-330

Spotted Star, CO2 Planet
++++++++++++++++++++++++

.. GENERATED FROM PYTHON SOURCE LINES 330-340

.. code-block:: Python


    model_rock_spotted = ObservationModel(params_rock_spotted)
    model_rock_spotted.build_planet()
    model_rock_spotted.build_spectra()

    data_rock_spotted = PhaseAnalyzer(model_rock_spotted.directories['all_model'])

    plot_transit(data_rock_spotted,'Spotted Star and Bare Rock','xkcd:golden yellow').show()





.. image-sg:: /auto_examples/end_to_end/images/sphx_glr_plot_spotted_transit_003.png
   :alt: Spotted Star and Bare Rock
   :srcset: /auto_examples/end_to_end/images/sphx_glr_plot_spotted_transit_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Starting at phase 161.9544290544939 deg, observe for 3.53 h in 26 steps
    Phases = [161.95 163.32 164.68 166.04 167.41 168.77 170.13 171.5  172.86 174.22
     175.59 176.95 178.31 179.68 181.04 182.4  183.77 185.13 186.49 187.86
     189.22 190.58 191.95 193.31 194.67 196.03 197.4 ] deg
    Build Planet:   0%|          | 0/26 [00:00<?, ?it/s]    Build Planet:   8%|▊         | 2/26 [00:00<00:02, 10.05it/s]    Build Planet:  15%|█▌        | 4/26 [00:00<00:02, 10.11it/s]    Build Planet:  23%|██▎       | 6/26 [00:00<00:02,  9.81it/s]    Build Planet:  27%|██▋       | 7/26 [00:00<00:01,  9.64it/s]    Build Planet:  31%|███       | 8/26 [00:00<00:01,  9.37it/s]    Build Planet:  38%|███▊      | 10/26 [00:01<00:01,  9.34it/s]    Build Planet:  42%|████▏     | 11/26 [00:01<00:01,  8.85it/s]    Build Planet:  46%|████▌     | 12/26 [00:01<00:01,  8.66it/s]    Build Planet:  50%|█████     | 13/26 [00:01<00:01,  8.42it/s]    Build Planet:  54%|█████▍    | 14/26 [00:01<00:01,  6.63it/s]    Build Planet:  58%|█████▊    | 15/26 [00:01<00:01,  7.25it/s]    Build Planet:  62%|██████▏   | 16/26 [00:01<00:01,  7.60it/s]    Build Planet:  65%|██████▌   | 17/26 [00:02<00:01,  7.78it/s]    Build Planet:  69%|██████▉   | 18/26 [00:02<00:00,  8.10it/s]    Build Planet:  73%|███████▎  | 19/26 [00:02<00:00,  8.24it/s]    Build Planet:  77%|███████▋  | 20/26 [00:02<00:00,  8.55it/s]    Build Planet:  81%|████████  | 21/26 [00:02<00:00,  8.38it/s]    Build Planet:  88%|████████▊ | 23/26 [00:02<00:00,  9.16it/s]    Build Planet:  92%|█████████▏| 24/26 [00:02<00:00,  9.15it/s]    Build Planet:  96%|█████████▌| 25/26 [00:02<00:00,  9.17it/s]    Build Planet: 100%|██████████| 26/26 [00:02<00:00,  9.06it/s]    Build Planet: 27it [00:03,  9.11it/s]                            Build Planet: 27it [00:03,  8.71it/s]
    Generated 94 mature spots
    Build Spectra:   0%|          | 0/26 [00:00<?, ?it/s]
    Loading Spectra:   0%|          | 0/12 [00:00<?, ?it/s]
    Loading Spectra:   8%|▊         | 1/12 [00:00<00:03,  3.42it/s]
    Loading Spectra:  17%|█▋        | 2/12 [00:00<00:02,  3.43it/s]
    Loading Spectra:  25%|██▌       | 3/12 [00:00<00:02,  3.43it/s]
    Loading Spectra:  33%|███▎      | 4/12 [00:01<00:02,  3.43it/s]
    Loading Spectra:  42%|████▏     | 5/12 [00:01<00:02,  3.44it/s]
    Loading Spectra:  50%|█████     | 6/12 [00:01<00:01,  3.44it/s]
    Loading Spectra:  58%|█████▊    | 7/12 [00:02<00:01,  3.44it/s]
    Loading Spectra:  67%|██████▋   | 8/12 [00:02<00:01,  3.45it/s]
    Loading Spectra:  75%|███████▌  | 9/12 [00:02<00:00,  3.45it/s]
    Loading Spectra:  83%|████████▎ | 10/12 [00:02<00:00,  3.45it/s]
    Loading Spectra:  92%|█████████▏| 11/12 [00:03<00:00,  3.45it/s]
    Loading Spectra: 100%|██████████| 12/12 [00:03<00:00,  3.46it/s]    Loading Spectra: 100%|██████████| 12/12 [00:03<00:00,  3.44it/s]
    Build Spectra:   4%|▍         | 1/26 [00:03<01:34,  3.76s/it]    Build Spectra:   8%|▊         | 2/26 [00:04<00:41,  1.71s/it]    Build Spectra:  12%|█▏        | 3/26 [00:04<00:24,  1.06s/it]    Build Spectra:  15%|█▌        | 4/26 [00:04<00:16,  1.33it/s]    Build Spectra:  19%|█▉        | 5/26 [00:04<00:12,  1.72it/s]    Build Spectra:  23%|██▎       | 6/26 [00:05<00:09,  2.09it/s]    Build Spectra:  27%|██▋       | 7/26 [00:05<00:07,  2.41it/s]    Build Spectra:  31%|███       | 8/26 [00:05<00:06,  2.69it/s]    Build Spectra:  35%|███▍      | 9/26 [00:06<00:05,  2.92it/s]    Build Spectra:  38%|███▊      | 10/26 [00:06<00:05,  3.09it/s]    Build Spectra:  42%|████▏     | 11/26 [00:06<00:05,  3.00it/s]    Build Spectra:  46%|████▌     | 12/26 [00:06<00:04,  2.93it/s]    Build Spectra:  50%|█████     | 13/26 [00:07<00:04,  2.91it/s]    Build Spectra:  54%|█████▍    | 14/26 [00:07<00:04,  2.89it/s]    Build Spectra:  58%|█████▊    | 15/26 [00:08<00:03,  2.86it/s]    Build Spectra:  62%|██████▏   | 16/26 [00:08<00:03,  2.83it/s]    Build Spectra:  65%|██████▌   | 17/26 [00:08<00:03,  2.81it/s]    Build Spectra:  69%|██████▉   | 18/26 [00:09<00:02,  2.85it/s]    Build Spectra:  73%|███████▎  | 19/26 [00:09<00:02,  3.04it/s]    Build Spectra:  77%|███████▋  | 20/26 [00:09<00:01,  3.18it/s]    Build Spectra:  81%|████████  | 21/26 [00:09<00:01,  3.28it/s]    Build Spectra:  85%|████████▍ | 22/26 [00:10<00:01,  3.37it/s]    Build Spectra:  88%|████████▊ | 23/26 [00:10<00:00,  3.43it/s]    Build Spectra:  92%|█████████▏| 24/26 [00:10<00:00,  3.47it/s]    Build Spectra:  96%|█████████▌| 25/26 [00:11<00:00,  3.46it/s]    Build Spectra: 100%|██████████| 26/26 [00:11<00:00,  3.45it/s]    Build Spectra: 100%|██████████| 26/26 [00:11<00:00,  2.28it/s]
    /home/ted/github/VSPEC/VSPEC/analysis.py:115: RuntimeWarning: No Layer info, maybe globes or molecular signatures are off
      warnings.warn(




.. GENERATED FROM PYTHON SOURCE LINES 341-345

Plot the observed spectra
-------------------------

Let's compare the transits. We also load in the actual JWST data.

.. GENERATED FROM PYTHON SOURCE LINES 347-352

Get the data
++++++++++++

Reduced data from :cite:t:`2023ApJ...948L..11M` is publicly available.
However, you must download it from the figure caption of the online version.

.. GENERATED FROM PYTHON SOURCE LINES 352-368

.. code-block:: Python


    import pandas as pd

    try:
        filename = Path(__file__).parent / 'moran2023_fig3.txt'
    except NameError:
        filename = 'moran2023_fig3.txt'

    df = pd.read_fwf(filename,colspecs=[(0,8),(9,14),(15,20),(21,25),(26,28)],
        header=20,names=['Reduction','Wave','Width','Depth','e_Depth'])
    used_eureka = df['Reduction']=='Eureka'
    moran_x = df.loc[used_eureka,'Wave']
    moran_y = df.loc[used_eureka,'Depth']
    moran_yerr = df.loc[used_eureka,'e_Depth']
    moran_mean = np.mean(moran_y)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/ted/github/VSPEC/examples/end_to_end/plot_spotted_transit.py:353: DeprecationWarning: 
    Pyarrow will become a required dependency of pandas in the next major release of pandas (pandas 3.0),
    (to allow more performant data types, such as the Arrow string type, and better interoperability with other libraries)
    but was not found to be installed on your system.
    If this would cause problems for you,
    please provide us feedback at https://github.com/pandas-dev/pandas/issues/54466
        
      import pandas as pd




.. GENERATED FROM PYTHON SOURCE LINES 369-372

Make the figure
+++++++++++++++


.. GENERATED FROM PYTHON SOURCE LINES 372-399

.. code-block:: Python


    fig, ax = plt.subplots(1,1)

    for data,label,color in zip(
        [data_rock_quiet,data_h2o_quiet,data_rock_spotted],
        ['Rock', 'H2O', 'Rock+Spots'],
        ['xkcd:lavender','xkcd:azure','xkcd:golden yellow']
    ):
        pre_transit = PRE_TRANSIT
        in_transit = IN_TRANSIT
        unocculted_spectrum = data.spectrum('total',pre_transit)
        occulted_spectrum = data.spectrum('total',in_transit)
        lost_to_transit = unocculted_spectrum-occulted_spectrum
        transit_depth = (lost_to_transit/unocculted_spectrum).to_value(u.dimensionless_unscaled)*1e6
        depth_mean = np.mean(transit_depth)
        shift = moran_mean/depth_mean
        shift = 1
        ax.plot(data.wavelength,transit_depth*shift,label=label,color=color)

    ax.errorbar(moran_x,moran_y,yerr=moran_yerr,
        fmt='o',color='k',label='Moran+23 Eureka!')

    ax.set_xlabel('Wavelength (um)')
    ax.set_ylabel('Transit depth (ppm)')
    ax.legend()





.. image-sg:: /auto_examples/end_to_end/images/sphx_glr_plot_spotted_transit_004.png
   :alt: plot spotted transit
   :srcset: /auto_examples/end_to_end/images/sphx_glr_plot_spotted_transit_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f8c6c55d490>



.. GENERATED FROM PYTHON SOURCE LINES 400-404

Make the figure again
+++++++++++++++++++++

This time without the bare rock

.. GENERATED FROM PYTHON SOURCE LINES 404-427

.. code-block:: Python


    fig, ax = plt.subplots(1,1,figsize=(5,3.5),tight_layout=True)

    for data,label,color in zip(
        [data_h2o_quiet,data_rock_spotted],
        ['H2O', 'Rock+Spots'],
        ['xkcd:azure','xkcd:golden yellow']
    ):
        pre_transit = PRE_TRANSIT
        in_transit = IN_TRANSIT
        unocculted_spectrum = data.spectrum('total',pre_transit)
        occulted_spectrum = data.spectrum('total',in_transit)
        lost_to_transit = unocculted_spectrum-occulted_spectrum
        transit_depth = (lost_to_transit/unocculted_spectrum).to_value(u.dimensionless_unscaled)
        ax.plot(data.wavelength,transit_depth*1e6,label=label,color=color)

    ax.errorbar(moran_x,moran_y,yerr=moran_yerr,
        fmt='o',color='k',label='Moran+23 Eureka!')

    ax.set_xlabel('Wavelength (um)')
    ax.set_ylabel('Transit depth (ppm)')
    ax.legend()




.. image-sg:: /auto_examples/end_to_end/images/sphx_glr_plot_spotted_transit_005.png
   :alt: plot spotted transit
   :srcset: /auto_examples/end_to_end/images/sphx_glr_plot_spotted_transit_005.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f8c8c3fd0d0>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 49.795 seconds)


.. _sphx_glr_download_auto_examples_end_to_end_plot_spotted_transit.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_spotted_transit.ipynb <plot_spotted_transit.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_spotted_transit.py <plot_spotted_transit.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
