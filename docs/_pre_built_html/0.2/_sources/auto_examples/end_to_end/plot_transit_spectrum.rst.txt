
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/end_to_end/plot_transit_spectrum.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_end_to_end_plot_transit_spectrum.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_end_to_end_plot_transit_spectrum.py:


Plot the spectrum of a transiting planet
========================================

This example runs VSPEC with a transiting planet scenario.

.. GENERATED FROM PYTHON SOURCE LINES 7-18

.. code-block:: default


    import numpy as np
    import matplotlib.pyplot as plt
    # from os import chdir
    # from pathlib import Path
    # chdir(Path(__file__).parent)

    from VSPEC import ObservationModel,PhaseAnalyzer

    CFG_PATH = 'transit_spectrum.yaml'








.. GENERATED FROM PYTHON SOURCE LINES 19-23

Initialize the VSPEC run
------------------------

We read in the config file and run the model.

.. GENERATED FROM PYTHON SOURCE LINES 23-28

.. code-block:: default


    model = ObservationModel.from_yaml(CFG_PATH)
    model.build_planet()
    model.build_spectra()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Loading Spectra:   0%|          | 0/17 [00:00<?, ?it/s]    Loading Spectra:  18%|#7        | 3/17 [00:00<00:00, 25.99it/s]    Loading Spectra:  41%|####1     | 7/17 [00:00<00:00, 29.59it/s]    Loading Spectra:  59%|#####8    | 10/17 [00:00<00:00, 28.97it/s]    Loading Spectra:  82%|########2 | 14/17 [00:00<00:00, 30.28it/s]    Loading Spectra: 100%|##########| 17/17 [00:00<00:00, 26.06it/s]
    Starting at phase 178.8 deg, observe for 1.5 h in 18 steps
    Phases = [178.8  178.93 179.06 179.2  179.33 179.46 179.59 179.73 179.86 179.99
     180.12 180.26 180.39 180.52 180.65 180.79 180.92 181.05] deg
    Build Planet:   0%|          | 0/18 [00:00<?, ?it/s]    Build Planet:   6%|5         | 1/18 [00:00<00:08,  1.93it/s]    Build Planet:  11%|#1        | 2/18 [00:01<00:08,  1.87it/s]    Build Planet:  17%|#6        | 3/18 [00:01<00:08,  1.78it/s]    Build Planet:  22%|##2       | 4/18 [00:02<00:09,  1.51it/s]    Build Planet:  28%|##7       | 5/18 [00:03<00:09,  1.37it/s]    Build Planet:  33%|###3      | 6/18 [00:04<00:09,  1.28it/s]    Build Planet:  39%|###8      | 7/18 [00:05<00:08,  1.23it/s]    Build Planet:  44%|####4     | 8/18 [00:05<00:08,  1.20it/s]    Build Planet:  50%|#####     | 9/18 [00:06<00:07,  1.18it/s]    Build Planet:  56%|#####5    | 10/18 [00:07<00:06,  1.15it/s]    Build Planet:  61%|######1   | 11/18 [00:08<00:06,  1.14it/s]    Build Planet:  67%|######6   | 12/18 [00:09<00:05,  1.12it/s]    Build Planet:  72%|#######2  | 13/18 [00:10<00:04,  1.13it/s]    Build Planet:  78%|#######7  | 14/18 [00:11<00:03,  1.11it/s]    Build Planet:  83%|########3 | 15/18 [00:12<00:02,  1.10it/s]    Build Planet:  89%|########8 | 16/18 [00:13<00:01,  1.11it/s]    Build Planet:  94%|#########4| 17/18 [00:13<00:00,  1.22it/s]    Build Planet: 100%|##########| 18/18 [00:14<00:00,  1.33it/s]    Build Planet: 100%|##########| 18/18 [00:14<00:00,  1.25it/s]
    Build Spectra:   0%|          | 0/18 [00:00<?, ?it/s]    Build Spectra:   6%|5         | 1/18 [00:00<00:14,  1.15it/s]    Build Spectra:  11%|#1        | 2/18 [00:01<00:10,  1.52it/s]    Build Spectra:  17%|#6        | 3/18 [00:01<00:09,  1.64it/s]    Build Spectra:  22%|##2       | 4/18 [00:02<00:08,  1.60it/s]    Build Spectra:  28%|##7       | 5/18 [00:03<00:08,  1.53it/s]    Build Spectra:  33%|###3      | 6/18 [00:04<00:08,  1.44it/s]    Build Spectra:  39%|###8      | 7/18 [00:04<00:07,  1.44it/s]    Build Spectra:  44%|####4     | 8/18 [00:05<00:06,  1.45it/s]    Build Spectra:  50%|#####     | 9/18 [00:06<00:06,  1.50it/s]    Build Spectra:  56%|#####5    | 10/18 [00:06<00:05,  1.50it/s]    Build Spectra:  61%|######1   | 11/18 [00:07<00:04,  1.48it/s]    Build Spectra:  67%|######6   | 12/18 [00:08<00:04,  1.44it/s]    Build Spectra:  72%|#######2  | 13/18 [00:08<00:03,  1.47it/s]    Build Spectra:  78%|#######7  | 14/18 [00:09<00:02,  1.47it/s]    Build Spectra:  83%|########3 | 15/18 [00:10<00:02,  1.43it/s]    Build Spectra:  89%|########8 | 16/18 [00:10<00:01,  1.47it/s]    Build Spectra:  94%|#########4| 17/18 [00:11<00:00,  1.49it/s]    Build Spectra: 100%|##########| 18/18 [00:11<00:00,  1.61it/s]    Build Spectra: 100%|##########| 18/18 [00:11<00:00,  1.50it/s]




.. GENERATED FROM PYTHON SOURCE LINES 29-34

Load in the data
----------------

We can use VSPEC to read in the synthetic
data we just created.

.. GENERATED FROM PYTHON SOURCE LINES 34-37

.. code-block:: default


    data = PhaseAnalyzer(model.directories['all_model'])








.. GENERATED FROM PYTHON SOURCE LINES 38-44

Calculate the transit depth
---------------------------

Since this star model has no limb darkeing, no spots,
and no noise, we don't need to fit a model to our data
to extract the transit depth.

.. GENERATED FROM PYTHON SOURCE LINES 44-54

.. code-block:: default


    cmb_data = data.total
    continuum = cmb_data[:,0] # the first epoch
    data_min = np.min(cmb_data,axis=1)
    transit_depth = (continuum-data_min)/continuum
    rp_rs = np.sqrt(transit_depth)
    wavelength = data.wavelength

    plt.plot(wavelength,rp_rs*100)
    plt.xlabel(f'Wavelength {wavelength.unit}')
    plt.ylabel(r'$\frac{R_p}{R_*}$ (%)')


.. image-sg:: /auto_examples/end_to_end/images/sphx_glr_plot_transit_spectrum_001.png
   :alt: plot transit spectrum
   :srcset: /auto_examples/end_to_end/images/sphx_glr_plot_transit_spectrum_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Text(24.972222222222214, 0.5, '$\\frac{R_p}{R_*}$ (%)')




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  32.550 seconds)


.. _sphx_glr_download_auto_examples_end_to_end_plot_transit_spectrum.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_transit_spectrum.py <plot_transit_spectrum.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_transit_spectrum.ipynb <plot_transit_spectrum.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
