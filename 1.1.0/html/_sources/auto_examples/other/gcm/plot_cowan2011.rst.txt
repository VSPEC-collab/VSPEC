
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/other/gcm/plot_cowan2011.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_other_gcm_plot_cowan2011.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_other_gcm_plot_cowan2011.py:


Compare to Cowan & Agol (2011)
==============================

This example compares our thermal inertia model to that
of :cite:t:`2011ApJ...726...82C`.

.. GENERATED FROM PYTHON SOURCE LINES 8-17

.. code-block:: Python


    import matplotlib.pyplot as plt
    import numpy as np
    from astropy import units as u
    import cartopy.crs as ccrs

    import VSPEC.gcm.heat_transfer as ht









.. GENERATED FROM PYTHON SOURCE LINES 18-22

Making a surface temperature map
--------------------------------

Let's make a surface map given some basic planetary parameters.

.. GENERATED FROM PYTHON SOURCE LINES 22-55

.. code-block:: Python


    epsilon = 2*np.pi
    star_teff = 5800*u.K
    albedo = 0.3
    r_star = 1*u.R_sun
    r_orbit = 1*u.AU

    tmap = ht.TemperatureMap.from_planet(
        epsilon=epsilon,
        star_teff=star_teff,
        albedo=albedo,
        r_star=r_star,
        r_orbit=r_orbit
    )
    lons = np.linspace(-180,180,90,endpoint=False)*u.deg
    lats = np.linspace(-90,90,46,endpoint=True)*u.deg

    longrid,latgrid = np.meshgrid(lons,lats)
    data = tmap.eval(lon=longrid,lat=latgrid,alpha=0)

    fig = plt.figure()
    proj = ccrs.Robinson(central_longitude=0)
    ax = fig.add_subplot(projection=proj)

    im = ax.pcolormesh(lons.to_value(u.deg),lats.to_value(u.deg),data.to_value(u.K),cmap='gist_heat',transform=ccrs.PlateCarree())
    gl = ax.gridlines(crs=ccrs.PlateCarree(),draw_labels=True,
        color='grey', alpha=0.8, linestyle='--')
    gl.top_xlabels = False
    gl.right_ylabels = False


    _=fig.colorbar(im,ax=ax,label='Surface Temperature (K)')




.. image-sg:: /auto_examples/other/gcm/images/sphx_glr_plot_cowan2011_001.png
   :alt: plot cowan2011
   :srcset: /auto_examples/other/gcm/images/sphx_glr_plot_cowan2011_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 56-60

Compare different values of :math:`\epsilon`
--------------------------------------------

We can recreate Figure 1 from :cite:t:`2011ApJ...726...82C`

.. GENERATED FROM PYTHON SOURCE LINES 60-76

.. code-block:: Python


    eps = [1e-4,0.2*np.pi,2*np.pi]
    label = ['0','2\\pi/10','2\\pi']
    modes = ['ivp_reflect','ivp_reflect','bvp']
    colors = ['b','k','r']

    n_points = 100

    fig,ax = plt.subplots(1,1)

    for e,l,m,c in zip(eps,label,modes,colors):
        lons, tsurf = ht.get_equator_curve(e,n_points,m)
        ax.plot(lons,tsurf,color=c,label=f'$\\epsilon = {l}$')

    ax.set_xlabel('$\\Phi$')
    ax.set_ylabel('$T/T_0$')
    _=ax.legend()


.. image-sg:: /auto_examples/other/gcm/images/sphx_glr_plot_cowan2011_002.png
   :alt: plot cowan2011
   :srcset: /auto_examples/other/gcm/images/sphx_glr_plot_cowan2011_002.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 10.641 seconds)


.. _sphx_glr_download_auto_examples_other_gcm_plot_cowan2011.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_cowan2011.ipynb <plot_cowan2011.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_cowan2011.py <plot_cowan2011.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_cowan2011.zip <plot_cowan2011.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
